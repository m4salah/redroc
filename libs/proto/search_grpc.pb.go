// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: libs/proto/search.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// GetThumbnailClient is the client API for GetThumbnail service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GetThumbnailClient interface {
	// RPC for getting the UIDs of images relevant to the keyword
	GetThumbnail(ctx context.Context, in *GetThumbnailImagesRequest, opts ...grpc.CallOption) (*GetThumbnailImagesResponse, error)
}

type getThumbnailClient struct {
	cc grpc.ClientConnInterface
}

func NewGetThumbnailClient(cc grpc.ClientConnInterface) GetThumbnailClient {
	return &getThumbnailClient{cc}
}

func (c *getThumbnailClient) GetThumbnail(ctx context.Context, in *GetThumbnailImagesRequest, opts ...grpc.CallOption) (*GetThumbnailImagesResponse, error) {
	out := new(GetThumbnailImagesResponse)
	err := c.cc.Invoke(ctx, "/grpc.GetThumbnail/GetThumbnail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetThumbnailServer is the server API for GetThumbnail service.
// All implementations must embed UnimplementedGetThumbnailServer
// for forward compatibility
type GetThumbnailServer interface {
	// RPC for getting the UIDs of images relevant to the keyword
	GetThumbnail(context.Context, *GetThumbnailImagesRequest) (*GetThumbnailImagesResponse, error)
	mustEmbedUnimplementedGetThumbnailServer()
}

// UnimplementedGetThumbnailServer must be embedded to have forward compatible implementations.
type UnimplementedGetThumbnailServer struct {
}

func (UnimplementedGetThumbnailServer) GetThumbnail(context.Context, *GetThumbnailImagesRequest) (*GetThumbnailImagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetThumbnail not implemented")
}
func (UnimplementedGetThumbnailServer) mustEmbedUnimplementedGetThumbnailServer() {}

// UnsafeGetThumbnailServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GetThumbnailServer will
// result in compilation errors.
type UnsafeGetThumbnailServer interface {
	mustEmbedUnimplementedGetThumbnailServer()
}

func RegisterGetThumbnailServer(s grpc.ServiceRegistrar, srv GetThumbnailServer) {
	s.RegisterService(&GetThumbnail_ServiceDesc, srv)
}

func _GetThumbnail_GetThumbnail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetThumbnailImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetThumbnailServer).GetThumbnail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.GetThumbnail/GetThumbnail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetThumbnailServer).GetThumbnail(ctx, req.(*GetThumbnailImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GetThumbnail_ServiceDesc is the grpc.ServiceDesc for GetThumbnail service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GetThumbnail_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.GetThumbnail",
	HandlerType: (*GetThumbnailServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetThumbnail",
			Handler:    _GetThumbnail_GetThumbnail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "libs/proto/search.proto",
}
